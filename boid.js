// Generated by CoffeeScript 1.3.3
var Boid,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Boid = (function() {

  function Boid() {
    this.aura = 100;
  }

  Boid.prototype.acquire = function(host) {
    this.acquired = true;
    host.boid = this;
    this.host = host;
    return this;
  };

  Boid.prototype.release = function() {
    this.acquired = false;
    this.host = this.host.boid = null;
    return this;
  };

  Boid.prototype.react = function(target) {};

  return Boid;

})();

Pool.Boids = (function(_super) {

  __extends(Boids, _super);

  function Boids() {
    return Boids.__super__.constructor.apply(this, arguments);
  }

  Boids.prototype.allocate = function() {
    return new Boid();
  };

  Boids.prototype.update = function(delta) {
    var boid, boids, i, j;
    boids = this.buffer;
    i = boids.length;
    while (i--) {
      boid = boids[i];
      if (!boid.acquired) {
        continue;
      }
      j = i;
      while (j--) {
        if (!boids[j].acquired) {
          continue;
        }
        boid.react(boids[j]);
      }
    }
    return this;
  };

  return Boids;

})(Pool);

Boid.pool = new Pool.Boids(128);
