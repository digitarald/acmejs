// Generated by CoffeeScript 1.3.3
var Boid, BoidPool,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Boid = (function() {

  function Boid() {
    this.aura = 100;
  }

  Boid.prototype.acquire = function(host) {
    this.acquired = true;
    host.boid = this;
    this.host = host;
    return this;
  };

  Boid.prototype.release = function() {
    this.acquired = false;
    delete this.host.boid;
    delete this.host;
    return this;
  };

  Boid.prototype.react = function(target) {};

  return Boid;

})();

BoidPool = (function(_super) {

  __extends(BoidPool, _super);

  function BoidPool() {
    return BoidPool.__super__.constructor.apply(this, arguments);
  }

  BoidPool.prototype.update = function(delta) {
    var boid, entities, i, j;
    entities = this.entities;
    i = entities.length;
    while (i--) {
      boid = entities[i];
      if (!boid.acquired) {
        continue;
      }
      j = i;
      while (j--) {
        if (!entities[j].acquired) {
          continue;
        }
        boid.react(entities[j]);
      }
    }
    return this;
  };

  return BoidPool;

})(Pool);

Boid.pool = new BoidPool(function() {
  return new Boid();
}, 512);
