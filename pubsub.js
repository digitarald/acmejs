// Generated by CoffeeScript 1.3.3
var Pubsub;

Pubsub = (function() {

  function Pubsub() {
    this.topics = [];
    this.scopes = [];
    this.methods = [];
  }

  Pubsub.prototype.acquire = function(host) {
    this.acquired = true;
    host.pubsub = this;
    this.host = host;
    return this;
  };

  Pubsub.prototype.release = function() {
    this.acquired = false;
    delete this.host.pubsub;
    delete this.host;
    this.topics.length = this.methods.length = this.scopes.length = 0;
    return this;
  };

  Pubsub.prototype.sub = function(topic, scope, method) {
    this.topics.push(topic);
    this.scopes.push(scope);
    this.methods.push(method);
    return this;
  };

  Pubsub.prototype.pub = function(topic, a0, a1, a2, a3, a4, a5, a6, a7) {
    var i, scopes, topics;
    topics = this.topics;
    scopes = this.scopes;
    i = topics.length;
    while (i--) {
      if (scopes[i] && (!topics[i] || topics[i] === topic)) {
        scopes[i][this.methods[i] || topic](a0, a1, a2, a3, a4, a5, a6, a7);
      }
    }
    return this;
  };

  Pubsub.prototype.unsub = function(topic, scope, method) {
    var before, i, last, methods, scopes, topics;
    scopes = this.scopes;
    topics = this.topics;
    methods = this.methods;
    last = before = i = scopes.length;
    while (i--) {
      if (scopes[i] && (!topic || topics[i] === topic) && (!method || methods[i] === method)) {
        i !== --last;
        topics[i] = topics[last];
        scopes[i] = scopes[last];
        methods[i] = methods[last];
      }
    }
    if (last !== before) {
      topics.length = scopes.length = methods.length = last;
    }
    return this;
  };

  return Pubsub;

})();

Pubsub.pool = new Pool(function() {
  return new Pubsub();
}, 512);
