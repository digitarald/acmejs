// Generated by CoffeeScript 1.6.1
var Component, Jitter, Pool, Vec2, cache,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Component = require('./component');

Pool = require('./pool');

Vec2 = require('./math').Vec2;

cache = Vec2();

Jitter = (function(_super) {

  __extends(Jitter, _super);

  function Jitter() {
    return Jitter.__super__.constructor.apply(this, arguments);
  }

  Jitter.prototype.tag = 'jitter';

  Jitter.prototype.attributes = {
    factor: 0.2,
    force: 300
  };

  Jitter.prototype.instantiate = function(attributes) {
    this.factor = attributes.factor, this.force = attributes.force;
    return this;
  };

  Jitter.prototype.fixedUpdate = function(dt) {
    if (Math.chance(this.factor)) {
      this.entity.kinetic.applyImpulse(Vec2.set(cache, Math.rand(-this.force, this.force), Math.rand(-this.force, this.force)));
    }
    return this;
  };

  return Jitter;

})(Component);

new Pool(Jitter);

module.exports = Jitter;
