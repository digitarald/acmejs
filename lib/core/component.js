// Generated by CoffeeScript 1.6.1
var Component;

require('./math');

Component = (function() {

  function Component() {}

  Component.prototype.tag = 'component';

  Component.prototype.toString = function() {
    return "Component " + this.tag + "#" + this.uid + " [^ " + this.entity + "]";
  };

  Component.prototype.alloc = function(attributes) {
    var component, components, entity, tag;
    this.entity = entity = this.parent;
    entity.components[this.tag] = this;
    entity[this.tag] = this;
    components = entity.components;
    for (tag in components) {
      if (!(tag !== this.tag)) {
        continue;
      }
      this[tag] = component = components[tag];
      component[this.tag] = this;
    }
    if (this.instantiate) {
      this.instantiate(attributes);
    }
    return this;
  };

  Component.prototype.destroy = function() {
    this.pool.destroy(this);
    return this;
  };

  Component.prototype.free = function() {
    var components, tag;
    delete this.entity.components[this.tag];
    this.entity[this.tag] = null;
    components = this.entity.components;
    for (tag in components) {
      if (!(tag !== this.tag)) {
        continue;
      }
      this[components[tag].tag] = null;
      components[tag][this.tag] = null;
    }
    this.entity = null;
    this.pool.free(this);
    return this;
  };

  Component.prototype.enable = function(state, silent) {
    this.enabled = (state != null ? state : state = !this.state);
    if (silent) {
      this.entity.pub('onComponent' + (state ? 'Enable' : 'Disable'), this);
    }
    return this;
  };

  Component.prototype.sub = function(scope, topic, method) {
    if (scope == null) {
      scope = this;
    }
    this.entity.sub(scope, topic, method);
    return this;
  };

  return Component;

})();

module.exports = Component;
