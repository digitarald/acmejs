// Generated by CoffeeScript 1.6.1
var Avoid, Component, Pool, Vec2,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Component = require('./component');

Pool = require('./pool');

Vec2 = require('./math').Vec2;

Avoid = (function(_super) {
  var diff, forward, projection, ray, tmp;

  __extends(Avoid, _super);

  function Avoid() {
    return Avoid.__super__.constructor.apply(this, arguments);
  }

  Avoid.prototype.tag = 'avoid';

  Avoid.prototype.attributes = {
    targets: null,
    sight: 100
  };

  Avoid.prototype.instantiate = function(attributes) {
    this.targets = attributes.targets, this.sight = attributes.sight;
    this.register = Pool.byTag[this.targets];
    return this;
  };

  forward = Vec2();

  diff = Vec2();

  ray = Vec2();

  projection = Vec2();

  tmp = Vec2();

  Avoid.prototype.fixedUpdate = function(dt) {
    var m, target, w, _i, _len, _ref;
    _ref = this.register;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      target = _ref[_i];
      if (!target.enabled) {
        continue;
      }
      Vec2.norm(this.kinetic.vel, u);
      Vec2.scal(u, this.sight, v);
      Vec2.sub(target.pos, this.transform.pos, a);
      Vec2.mul(Vec2.mul(a, u, p), u);
      Vec2.sub(p, a, b);
      if ((Vec2.len(b) < target.bounds.radius) && (Vec2.len(p) < Vec2.len(v))) {
        w = Vec2.rot(a, Vec2.rad(this.kinetic.vel), w);
        Vec2.norm(w);
        if (w[0] < 0) {
          m = 1;
        }
        if (w[0] > 0) {
          m = -1;
        }
        Fs.x += m * _STEERINGFORCE * (_COLLISION_VISIBILITY_FACTOR * Units[i].fLength) / a.Magnitude();
      }
    }
    this.kinetic.applyImpulse(acc);
    return this;
  };

  return Avoid;

})(Component);

new Pool(Avoid);

module.exports = Avoid;
