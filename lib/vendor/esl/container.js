// Generated by CoffeeScript 1.6.1
var Component, Engine, Esl, EslContainer, Pool, Vec2,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Component = require('./../../core/component');

Pool = require('./../../core/pool');

Vec2 = require('./../../core/math').Vec2;

Esl = require('./esl');

Engine = require('./../../core/engine');

EslContainer = (function(_super) {

  __extends(EslContainer, _super);

  EslContainer.prototype.tag = 'eslContainer';

  function EslContainer() {}

  EslContainer.prototype.instantiate = function(attributes) {
    var child, stage;
    if (!(stage = this.root.eslStage)) {
      stage = new Esl.Stage(Engine.renderer.buf);
      stage.autoClear = false;
      EslContainer.eslStage = stage;
      this.root.eslStage = stage;
    }
    child = attributes.child;
    if (typeof child === 'function') {
      child = child.call(this, attributes);
    }
    stage.addChild(child);
    this.child = child;
    return this;
  };

  EslContainer.prototype.onTransform = function() {
    return this;
  };

  EslContainer.prototype.onEnable = function() {
    this.child.visible = true;
    return this;
  };

  EslContainer.prototype.onDisable = function() {
    this.child.visible = false;
    return this;
  };

  EslContainer.prototype.free = function() {
    this.root.eslStage.removeChild(this.child);
    this.child = null;
    return EslContainer.__super__.free.call(this);
  };

  return EslContainer;

})(Component);

EslContainer.render = function(dt) {
  var child, container, transform, _i, _len, _ref;
  _ref = this.register;
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    container = _ref[_i];
    if (!container.enabled) {
      continue;
    }
    child = container.child, transform = container.transform;
    Vec2.toObj(transform.pos, child);
    child.rotation = transform.angle;
  }
  EslContainer.eslStage.update();
  return this;
};

new Pool(EslContainer);

module.exports = EslContainer;
