// Generated by CoffeeScript 1.3.3
var Pool;

Pool = (function() {

  function Pool(allocate, instances) {
    this.allocate = allocate;
    this.instances = instances != null ? instances : 0;
    this.entities = [];
    while (this.instances--) {
      this.entities.push(this.allocate());
    }
  }

  Pool.prototype.acquire = function() {
    var entity, _i, _len, _ref;
    _ref = this.entities;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      entity = _ref[_i];
      if (!entity.acquired) {
        entity.acquire.apply(entity, arguments);
        return entity;
      }
    }
    entity = this.allocate();
    this.entities.push(entity);
    entity.acquire.apply(entity, arguments);
    return entity;
  };

  Pool.prototype.update = function(delta) {
    var entity, _i, _len, _ref;
    _ref = this.entities;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      entity = _ref[_i];
      if (entity.acquired) {
        entity.update(delta);
      }
    }
    return this;
  };

  Pool.prototype.draw = function(context) {
    var entity, _i, _len, _ref;
    _ref = this.entities;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      entity = _ref[_i];
      if (!entity.acquired) {
        continue;
      }
      context.save();
      entity.draw(context);
      context.restore();
    }
    return this;
  };

  return Pool;

})();
