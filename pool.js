// Generated by CoffeeScript 1.3.3
var Pool;

Pool = (function() {

  function Pool(preinstantiate, cls) {
    var i;
    this.preinstantiate = preinstantiate != null ? preinstantiate : 0;
    this.cls = cls;
    this.roster = [];
    i = this.preinstantiate;
    while (i--) {
      this.roster.push(this.instantiate());
    }
  }

  Pool.prototype.instantiate = function() {
    return new this.cls();
  };

  Pool.prototype.alloc = function() {
    var entity, _i, _len, _ref;
    _ref = this.roster;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      entity = _ref[_i];
      if (!(!entity.allocd)) {
        continue;
      }
      entity.allocd = true;
      entity.alloc.apply(entity, arguments);
      return entity;
    }
    this.roster.push((entity = this.instantiate()));
    entity.allocd = true;
    entity.alloc.apply(entity, arguments);
    return entity;
  };

  Pool.prototype.update = function(dt, engine) {
    var entity, _i, _len, _ref;
    _ref = this.roster;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      entity = _ref[_i];
      if (entity.allocd) {
        entity.update(dt, engine);
      }
    }
    return this;
  };

  Pool.prototype.draw = function(context, engine) {
    var entity, _i, _len, _ref;
    _ref = this.roster;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      entity = _ref[_i];
      if (!entity.allocd) {
        continue;
      }
      context.save();
      entity.draw(context, engine);
      context.restore();
    }
    return this;
  };

  return Pool;

})();
