// Generated by CoffeeScript 1.3.3
var Pool;

Pool = (function() {

  function Pool(create, args, instances) {
    this.create = create;
    this.args = args || [];
    this.entities = [];
    while (instances--) {
      this.entities.push(this.create.apply(this, this.args));
    }
    this;

  }

  Pool.prototype.next = function() {
    var entity, _i, _len, _ref;
    _ref = this.entities;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      entity = _ref[_i];
      if (!entity.awake) {
        entity.wakeup.apply(entity, arguments);
        return entity;
      }
    }
    entity = this.create.apply(this, this.args);
    this.entities.push(entity);
    entity.wakeup.apply(entity, arguments);
    return entity;
  };

  Pool.prototype.update = function(delta) {
    var entity, _i, _len, _ref;
    _ref = this.entities;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      entity = _ref[_i];
      if (entity.awake) {
        entity.update(delta);
      }
    }
    return this;
  };

  Pool.prototype.draw = function(context) {
    var entity, _i, _len, _ref;
    _ref = this.entities;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      entity = _ref[_i];
      if (entity.awake) {
        context.save();
        entity.draw(context);
        context.restore();
      }
    }
    return this;
  };

  return Pool;

})();
