// Generated by CoffeeScript 1.3.3
var Pool;

Pool = (function() {

  function Pool(preallocate) {
    var i;
    this.preallocate = preallocate != null ? preallocate : 0;
    this.buffer = [];
    i = this.preallocate;
    while (i--) {
      this.buffer.push(this.allocate());
    }
  }

  Pool.prototype.acquire = function() {
    var entity, _i, _len, _ref;
    _ref = this.buffer;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      entity = _ref[_i];
      if (!entity.acquired) {
        entity.acquire.apply(entity, arguments);
        return entity;
      }
    }
    this.buffer.push((entity = this.allocate()));
    entity.acquire.apply(entity, arguments);
    return entity;
  };

  Pool.prototype.update = function(delta) {
    var entity, _i, _len, _ref;
    _ref = this.buffer;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      entity = _ref[_i];
      if (entity.acquired) {
        entity.update(delta);
      }
    }
    return this;
  };

  Pool.prototype.draw = function(context) {
    var entity, _i, _len, _ref;
    _ref = this.buffer;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      entity = _ref[_i];
      if (!entity.acquired) {
        continue;
      }
      context.save();
      entity.draw(context);
      context.restore();
    }
    return this;
  };

  return Pool;

})();
