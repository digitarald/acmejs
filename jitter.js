// Generated by CoffeeScript 1.3.3
var Jitter,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Jitter = (function(_super) {

  __extends(Jitter, _super);

  function Jitter() {
    return Jitter.__super__.constructor.apply(this, arguments);
  }

  Jitter.prototype.name = 'jitter';

  Jitter.prototype.alloc = function(parent, factor, force) {
    this.factor = factor != null ? factor : 0.8;
    this.force = force != null ? force : 1000;
    return Jitter.__super__.alloc.call(this, parent);
  };

  Jitter.prototype.fixedUpdate = function(dt) {
    var rand;
    if (Math.randomBool(this.factor)) {
      rand = Vec2.set(Vec2.cache[0], Math.randomFloat(-this.force, this.force), Math.randomFloat(-this.force, this.force));
      return Vec2.add(this.parent.kinetic.acc, rand);
    }
  };

  return Jitter;

})(Component);

new Pool(Jitter);
